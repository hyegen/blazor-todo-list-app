@page "/addtask"

@inject HttpClient HttpClient
@inject IModalService Modal

<div class="modal-body">
    <form @onsubmit="AddTodoAsync">
        <div class="form-group">
            <label for="taskName">Görev Adı</label>
            <input type="text" class="form-control" id="taskName" @bind="task.TaskName" required />
        </div>
        <div class="form-group">
            <label for="description">Açıklama</label>
            <textarea class="form-control" id="description" @bind="task.Description" required></textarea>
        </div>
        <div class="form-group">
            <label for="priority">Öncelik</label>
            <select class="form-control" id="priority" @bind="task.Priority">
                <option value="Low">Düşük</option>
                <option value="Medium">Orta</option>
                <option value="High">Yüksek</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Görev Ekle</button>
    </form>
</div>

@code {
    private Task_ task = new Task_();

    private async Task AddTodoAsync()
    {
        task.UserId = 1;
        task.CreatedDate_ = DateTime.Now;
        var response = await HttpClient.PostAsJsonAsync("https://localhost:7000/api/todo/AddTodo", task);
        if (response.IsSuccessStatusCode)
        {
            var options = new ModalOptions
                {
                    HideCloseButton = true,
                    DisableBackgroundCancel = true,
                    Animation = ModalAnimation.FadeIn(1)
                };

            var modalRef = Modal.Show<SuccessMessage>("Başarılı", options);
            await Task.Delay(3000);
            modalRef.Close();
        }
        else
        {
            var options = new ModalOptions
                {
                    HideCloseButton = true,
                    DisableBackgroundCancel = true,
                    Animation = ModalAnimation.FadeIn(1)
                };

            var modalRef = Modal.Show<ErrorMessage>("Başarısız", options);
            await Task.Delay(3000);
            modalRef.Close();
        }
    }
}

