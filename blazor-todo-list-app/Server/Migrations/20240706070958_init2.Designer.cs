// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace blazortodolistapp.Server.Migrations
{
    [DbContext(typeof(ToDoContext))]
    [Migration("20240706070958_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate_")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate_")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "(Task 1)What a nice Task Maaaan",
                            CreatedDate_ = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "(Task 2)What a nice Task Maaaan",
                            CreatedDate_ = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CommentText = "(Task 3)What a nice Task Maaaan",
                            CreatedDate_ = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.SubTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime>("CreatedDate_")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubtaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate_")
                        .HasColumnType("datetime2");

                    b.HasKey("TaskId");

                    b.HasIndex("TaskUserId");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.Task_", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate_")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate_")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentId = 1,
                            CreatedDate_ = new DateTime(2024, 7, 6, 10, 9, 58, 544, DateTimeKind.Local).AddTicks(372),
                            Description = "Math homeworks will be continued.",
                            IsCompleted = false,
                            Status = 3,
                            TaskName = "Math Homework",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentId = 2,
                            CreatedDate_ = new DateTime(2024, 7, 6, 10, 9, 58, 544, DateTimeKind.Local).AddTicks(381),
                            Description = "Description of PHYSC.",
                            IsCompleted = true,
                            Status = 2,
                            TaskName = "PHYSC Homework",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CommentId = 3,
                            CreatedDate_ = new DateTime(2024, 7, 6, 10, 9, 58, 544, DateTimeKind.Local).AddTicks(383),
                            Description = "Hi from cpu :D.",
                            IsCompleted = true,
                            Status = 2,
                            TaskName = "Logic Circuits Homework",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate_ = new DateTime(2024, 7, 6, 10, 9, 58, 544, DateTimeKind.Local).AddTicks(384),
                            Description = "Buy new meal and others.",
                            IsCompleted = false,
                            Status = 1,
                            TaskName = "Go To Super Market",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate_ = new DateTime(2024, 7, 6, 10, 9, 58, 544, DateTimeKind.Local).AddTicks(385),
                            Description = "Wash dishes xxxx",
                            IsCompleted = false,
                            Status = 1,
                            TaskName = "Wash Dishes",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate_ = new DateTime(2024, 7, 6, 10, 9, 58, 544, DateTimeKind.Local).AddTicks(386),
                            Description = "Do vacuuming to home for a clean home :).",
                            IsCompleted = true,
                            Status = 2,
                            TaskName = "Vacuuming",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate_")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate_")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate_ = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hyegen205@gmail.com",
                            Username = "YEGEN"
                        });
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.Comment", b =>
                {
                    b.HasOne("blazor_todo_list_app.Entities.Entities.Task_", "Task")
                        .WithOne("Comment")
                        .HasForeignKey("blazor_todo_list_app.Entities.Entities.Comment", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("blazor_todo_list_app.Entities.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.SubTask", b =>
                {
                    b.HasOne("blazor_todo_list_app.Entities.Entities.Task_", "Task")
                        .WithMany("Subtasks")
                        .HasForeignKey("TaskUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.Task_", b =>
                {
                    b.HasOne("blazor_todo_list_app.Entities.Entities.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.Task_", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("Subtasks");
                });

            modelBuilder.Entity("blazor_todo_list_app.Entities.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
